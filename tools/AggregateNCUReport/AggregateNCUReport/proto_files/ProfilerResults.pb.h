// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProfilerResults.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProfilerResults_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ProfilerResults_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProfilerReport.pb.h"
#include "ProfilerCommon.pb.h"
#include "ProfilerCategories.pb.h"
#include "ProfilerStringTable.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProfilerResults_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProfilerResults_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProfilerResults_2eproto;
class ClearCachedProfilerSourceMessage;
class ClearCachedProfilerSourceMessageDefaultTypeInternal;
extern ClearCachedProfilerSourceMessageDefaultTypeInternal _ClearCachedProfilerSourceMessage_default_instance_;
class ClearCachedProfilerSourceMessage_TypeInfo;
class ClearCachedProfilerSourceMessage_TypeInfoDefaultTypeInternal;
extern ClearCachedProfilerSourceMessage_TypeInfoDefaultTypeInternal _ClearCachedProfilerSourceMessage_TypeInfo_default_instance_;
class MetricListElementMessage;
class MetricListElementMessageDefaultTypeInternal;
extern MetricListElementMessageDefaultTypeInternal _MetricListElementMessage_default_instance_;
class MetricResultMessage;
class MetricResultMessageDefaultTypeInternal;
extern MetricResultMessageDefaultTypeInternal _MetricResultMessage_default_instance_;
class MetricValueMessage;
class MetricValueMessageDefaultTypeInternal;
extern MetricValueMessageDefaultTypeInternal _MetricValueMessage_default_instance_;
class ProfilerResultMessage;
class ProfilerResultMessageDefaultTypeInternal;
extern ProfilerResultMessageDefaultTypeInternal _ProfilerResultMessage_default_instance_;
class ProfilerResultMessage_TypeInfo;
class ProfilerResultMessage_TypeInfoDefaultTypeInternal;
extern ProfilerResultMessage_TypeInfoDefaultTypeInternal _ProfilerResultMessage_TypeInfo_default_instance_;
class ProfilerSourceMessage;
class ProfilerSourceMessageDefaultTypeInternal;
extern ProfilerSourceMessageDefaultTypeInternal _ProfilerSourceMessage_default_instance_;
class ProfilerSourceMessage_TypeInfo;
class ProfilerSourceMessage_TypeInfoDefaultTypeInternal;
extern ProfilerSourceMessage_TypeInfoDefaultTypeInternal _ProfilerSourceMessage_TypeInfo_default_instance_;
class ProfilerVersionInfoMessage;
class ProfilerVersionInfoMessageDefaultTypeInternal;
extern ProfilerVersionInfoMessageDefaultTypeInternal _ProfilerVersionInfoMessage_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ClearCachedProfilerSourceMessage* Arena::CreateMaybeMessage<::ClearCachedProfilerSourceMessage>(Arena*);
template<> ::ClearCachedProfilerSourceMessage_TypeInfo* Arena::CreateMaybeMessage<::ClearCachedProfilerSourceMessage_TypeInfo>(Arena*);
template<> ::MetricListElementMessage* Arena::CreateMaybeMessage<::MetricListElementMessage>(Arena*);
template<> ::MetricResultMessage* Arena::CreateMaybeMessage<::MetricResultMessage>(Arena*);
template<> ::MetricValueMessage* Arena::CreateMaybeMessage<::MetricValueMessage>(Arena*);
template<> ::ProfilerResultMessage* Arena::CreateMaybeMessage<::ProfilerResultMessage>(Arena*);
template<> ::ProfilerResultMessage_TypeInfo* Arena::CreateMaybeMessage<::ProfilerResultMessage_TypeInfo>(Arena*);
template<> ::ProfilerSourceMessage* Arena::CreateMaybeMessage<::ProfilerSourceMessage>(Arena*);
template<> ::ProfilerSourceMessage_TypeInfo* Arena::CreateMaybeMessage<::ProfilerSourceMessage_TypeInfo>(Arena*);
template<> ::ProfilerVersionInfoMessage* Arena::CreateMaybeMessage<::ProfilerVersionInfoMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum ProfilerResultsMethod : int {
  InvalidResultsMethod = 0,
  MethodSourceMessage = 1,
  MethodResultMessage = 2,
  MethodClearCachedProfilerSourceMessage = 3
};
bool ProfilerResultsMethod_IsValid(int value);
constexpr ProfilerResultsMethod ProfilerResultsMethod_MIN = InvalidResultsMethod;
constexpr ProfilerResultsMethod ProfilerResultsMethod_MAX = MethodClearCachedProfilerSourceMessage;
constexpr int ProfilerResultsMethod_ARRAYSIZE = ProfilerResultsMethod_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProfilerResultsMethod_descriptor();
template<typename T>
inline const std::string& ProfilerResultsMethod_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProfilerResultsMethod>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProfilerResultsMethod_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProfilerResultsMethod_descriptor(), enum_t_value);
}
inline bool ProfilerResultsMethod_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProfilerResultsMethod* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProfilerResultsMethod>(
    ProfilerResultsMethod_descriptor(), name, value);
}
// ===================================================================

class MetricValueMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MetricValueMessage) */ {
 public:
  inline MetricValueMessage() : MetricValueMessage(nullptr) {}
  virtual ~MetricValueMessage();

  MetricValueMessage(const MetricValueMessage& from);
  MetricValueMessage(MetricValueMessage&& from) noexcept
    : MetricValueMessage() {
    *this = ::std::move(from);
  }

  inline MetricValueMessage& operator=(const MetricValueMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricValueMessage& operator=(MetricValueMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MetricValueMessage& default_instance();

  static inline const MetricValueMessage* internal_default_instance() {
    return reinterpret_cast<const MetricValueMessage*>(
               &_MetricValueMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MetricValueMessage& a, MetricValueMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(MetricValueMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricValueMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MetricValueMessage* New() const final {
    return CreateMaybeMessage<MetricValueMessage>(nullptr);
  }

  MetricValueMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MetricValueMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MetricValueMessage& from);
  void MergeFrom(const MetricValueMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetricValueMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MetricValueMessage";
  }
  protected:
  explicit MetricValueMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringValueFieldNumber = 1,
    kDoubleValueFieldNumber = 3,
    kFloatValueFieldNumber = 2,
    kUint32ValueFieldNumber = 4,
    kUint64ValueFieldNumber = 5,
  };
  // optional string StringValue = 1;
  bool has_stringvalue() const;
  private:
  bool _internal_has_stringvalue() const;
  public:
  void clear_stringvalue();
  const std::string& stringvalue() const;
  void set_stringvalue(const std::string& value);
  void set_stringvalue(std::string&& value);
  void set_stringvalue(const char* value);
  void set_stringvalue(const char* value, size_t size);
  std::string* mutable_stringvalue();
  std::string* release_stringvalue();
  void set_allocated_stringvalue(std::string* stringvalue);
  private:
  const std::string& _internal_stringvalue() const;
  void _internal_set_stringvalue(const std::string& value);
  std::string* _internal_mutable_stringvalue();
  public:

  // optional double DoubleValue = 3;
  bool has_doublevalue() const;
  private:
  bool _internal_has_doublevalue() const;
  public:
  void clear_doublevalue();
  double doublevalue() const;
  void set_doublevalue(double value);
  private:
  double _internal_doublevalue() const;
  void _internal_set_doublevalue(double value);
  public:

  // optional float FloatValue = 2;
  bool has_floatvalue() const;
  private:
  bool _internal_has_floatvalue() const;
  public:
  void clear_floatvalue();
  float floatvalue() const;
  void set_floatvalue(float value);
  private:
  float _internal_floatvalue() const;
  void _internal_set_floatvalue(float value);
  public:

  // optional uint32 Uint32Value = 4;
  bool has_uint32value() const;
  private:
  bool _internal_has_uint32value() const;
  public:
  void clear_uint32value();
  ::PROTOBUF_NAMESPACE_ID::uint32 uint32value() const;
  void set_uint32value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uint32value() const;
  void _internal_set_uint32value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 Uint64Value = 5;
  bool has_uint64value() const;
  private:
  bool _internal_has_uint64value() const;
  public:
  void clear_uint64value();
  ::PROTOBUF_NAMESPACE_ID::uint64 uint64value() const;
  void set_uint64value(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uint64value() const;
  void _internal_set_uint64value(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:MetricValueMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue_;
  double doublevalue_;
  float floatvalue_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uint32value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uint64value_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class MetricListElementMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MetricListElementMessage) */ {
 public:
  inline MetricListElementMessage() : MetricListElementMessage(nullptr) {}
  virtual ~MetricListElementMessage();

  MetricListElementMessage(const MetricListElementMessage& from);
  MetricListElementMessage(MetricListElementMessage&& from) noexcept
    : MetricListElementMessage() {
    *this = ::std::move(from);
  }

  inline MetricListElementMessage& operator=(const MetricListElementMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricListElementMessage& operator=(MetricListElementMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MetricListElementMessage& default_instance();

  static inline const MetricListElementMessage* internal_default_instance() {
    return reinterpret_cast<const MetricListElementMessage*>(
               &_MetricListElementMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MetricListElementMessage& a, MetricListElementMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(MetricListElementMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricListElementMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MetricListElementMessage* New() const final {
    return CreateMaybeMessage<MetricListElementMessage>(nullptr);
  }

  MetricListElementMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MetricListElementMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MetricListElementMessage& from);
  void MergeFrom(const MetricListElementMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetricListElementMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MetricListElementMessage";
  }
  protected:
  explicit MetricListElementMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorrelationIdFieldNumber = 1,
    kElementValueFieldNumber = 2,
  };
  // optional .MetricValueMessage CorrelationId = 1;
  bool has_correlationid() const;
  private:
  bool _internal_has_correlationid() const;
  public:
  void clear_correlationid();
  const ::MetricValueMessage& correlationid() const;
  ::MetricValueMessage* release_correlationid();
  ::MetricValueMessage* mutable_correlationid();
  void set_allocated_correlationid(::MetricValueMessage* correlationid);
  private:
  const ::MetricValueMessage& _internal_correlationid() const;
  ::MetricValueMessage* _internal_mutable_correlationid();
  public:
  void unsafe_arena_set_allocated_correlationid(
      ::MetricValueMessage* correlationid);
  ::MetricValueMessage* unsafe_arena_release_correlationid();

  // required .MetricValueMessage ElementValue = 2;
  bool has_elementvalue() const;
  private:
  bool _internal_has_elementvalue() const;
  public:
  void clear_elementvalue();
  const ::MetricValueMessage& elementvalue() const;
  ::MetricValueMessage* release_elementvalue();
  ::MetricValueMessage* mutable_elementvalue();
  void set_allocated_elementvalue(::MetricValueMessage* elementvalue);
  private:
  const ::MetricValueMessage& _internal_elementvalue() const;
  ::MetricValueMessage* _internal_mutable_elementvalue();
  public:
  void unsafe_arena_set_allocated_elementvalue(
      ::MetricValueMessage* elementvalue);
  ::MetricValueMessage* unsafe_arena_release_elementvalue();

  // @@protoc_insertion_point(class_scope:MetricListElementMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::MetricValueMessage* correlationid_;
  ::MetricValueMessage* elementvalue_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class MetricResultMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MetricResultMessage) */ {
 public:
  inline MetricResultMessage() : MetricResultMessage(nullptr) {}
  virtual ~MetricResultMessage();

  MetricResultMessage(const MetricResultMessage& from);
  MetricResultMessage(MetricResultMessage&& from) noexcept
    : MetricResultMessage() {
    *this = ::std::move(from);
  }

  inline MetricResultMessage& operator=(const MetricResultMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricResultMessage& operator=(MetricResultMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MetricResultMessage& default_instance();

  static inline const MetricResultMessage* internal_default_instance() {
    return reinterpret_cast<const MetricResultMessage*>(
               &_MetricResultMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MetricResultMessage& a, MetricResultMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(MetricResultMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricResultMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MetricResultMessage* New() const final {
    return CreateMaybeMessage<MetricResultMessage>(nullptr);
  }

  MetricResultMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MetricResultMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MetricResultMessage& from);
  void MergeFrom(const MetricResultMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetricResultMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MetricResultMessage";
  }
  protected:
  explicit MetricResultMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricValueListFieldNumber = 3,
    kMetricValueFieldNumber = 2,
    kMetricNameIdFieldNumber = 1,
  };
  // repeated .MetricListElementMessage MetricValueList = 3;
  int metricvaluelist_size() const;
  private:
  int _internal_metricvaluelist_size() const;
  public:
  void clear_metricvaluelist();
  ::MetricListElementMessage* mutable_metricvaluelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricListElementMessage >*
      mutable_metricvaluelist();
  private:
  const ::MetricListElementMessage& _internal_metricvaluelist(int index) const;
  ::MetricListElementMessage* _internal_add_metricvaluelist();
  public:
  const ::MetricListElementMessage& metricvaluelist(int index) const;
  ::MetricListElementMessage* add_metricvaluelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricListElementMessage >&
      metricvaluelist() const;

  // optional .MetricValueMessage MetricValue = 2;
  bool has_metricvalue() const;
  private:
  bool _internal_has_metricvalue() const;
  public:
  void clear_metricvalue();
  const ::MetricValueMessage& metricvalue() const;
  ::MetricValueMessage* release_metricvalue();
  ::MetricValueMessage* mutable_metricvalue();
  void set_allocated_metricvalue(::MetricValueMessage* metricvalue);
  private:
  const ::MetricValueMessage& _internal_metricvalue() const;
  ::MetricValueMessage* _internal_mutable_metricvalue();
  public:
  void unsafe_arena_set_allocated_metricvalue(
      ::MetricValueMessage* metricvalue);
  ::MetricValueMessage* unsafe_arena_release_metricvalue();

  // required uint32 MetricNameId = 1;
  bool has_metricnameid() const;
  private:
  bool _internal_has_metricnameid() const;
  public:
  void clear_metricnameid();
  ::PROTOBUF_NAMESPACE_ID::uint32 metricnameid() const;
  void set_metricnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_metricnameid() const;
  void _internal_set_metricnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:MetricResultMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricListElementMessage > metricvaluelist_;
  ::MetricValueMessage* metricvalue_;
  ::PROTOBUF_NAMESPACE_ID::uint32 metricnameid_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class ProfilerSourceMessage_TypeInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProfilerSourceMessage.TypeInfo) */ {
 public:
  inline ProfilerSourceMessage_TypeInfo() : ProfilerSourceMessage_TypeInfo(nullptr) {}
  virtual ~ProfilerSourceMessage_TypeInfo();

  ProfilerSourceMessage_TypeInfo(const ProfilerSourceMessage_TypeInfo& from);
  ProfilerSourceMessage_TypeInfo(ProfilerSourceMessage_TypeInfo&& from) noexcept
    : ProfilerSourceMessage_TypeInfo() {
    *this = ::std::move(from);
  }

  inline ProfilerSourceMessage_TypeInfo& operator=(const ProfilerSourceMessage_TypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfilerSourceMessage_TypeInfo& operator=(ProfilerSourceMessage_TypeInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProfilerSourceMessage_TypeInfo& default_instance();

  static inline const ProfilerSourceMessage_TypeInfo* internal_default_instance() {
    return reinterpret_cast<const ProfilerSourceMessage_TypeInfo*>(
               &_ProfilerSourceMessage_TypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ProfilerSourceMessage_TypeInfo& a, ProfilerSourceMessage_TypeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ProfilerSourceMessage_TypeInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfilerSourceMessage_TypeInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProfilerSourceMessage_TypeInfo* New() const final {
    return CreateMaybeMessage<ProfilerSourceMessage_TypeInfo>(nullptr);
  }

  ProfilerSourceMessage_TypeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProfilerSourceMessage_TypeInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProfilerSourceMessage_TypeInfo& from);
  void MergeFrom(const ProfilerSourceMessage_TypeInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProfilerSourceMessage_TypeInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProfilerSourceMessage.TypeInfo";
  }
  protected:
  explicit ProfilerSourceMessage_TypeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryFieldNumber = 1,
    kMethodFieldNumber = 2,
  };
  // optional .ProfilerCategory Category = 1 [default = CategoryResults];
  bool has_category() const;
  private:
  bool _internal_has_category() const;
  public:
  void clear_category();
  ::ProfilerCategory category() const;
  void set_category(::ProfilerCategory value);
  private:
  ::ProfilerCategory _internal_category() const;
  void _internal_set_category(::ProfilerCategory value);
  public:

  // optional .ProfilerResultsMethod Method = 2 [default = MethodSourceMessage];
  bool has_method() const;
  private:
  bool _internal_has_method() const;
  public:
  void clear_method();
  ::ProfilerResultsMethod method() const;
  void set_method(::ProfilerResultsMethod value);
  private:
  ::ProfilerResultsMethod _internal_method() const;
  void _internal_set_method(::ProfilerResultsMethod value);
  public:

  // @@protoc_insertion_point(class_scope:ProfilerSourceMessage.TypeInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int category_;
  int method_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class ProfilerSourceMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProfilerSourceMessage) */ {
 public:
  inline ProfilerSourceMessage() : ProfilerSourceMessage(nullptr) {}
  virtual ~ProfilerSourceMessage();

  ProfilerSourceMessage(const ProfilerSourceMessage& from);
  ProfilerSourceMessage(ProfilerSourceMessage&& from) noexcept
    : ProfilerSourceMessage() {
    *this = ::std::move(from);
  }

  inline ProfilerSourceMessage& operator=(const ProfilerSourceMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfilerSourceMessage& operator=(ProfilerSourceMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProfilerSourceMessage& default_instance();

  static inline const ProfilerSourceMessage* internal_default_instance() {
    return reinterpret_cast<const ProfilerSourceMessage*>(
               &_ProfilerSourceMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ProfilerSourceMessage& a, ProfilerSourceMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ProfilerSourceMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfilerSourceMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProfilerSourceMessage* New() const final {
    return CreateMaybeMessage<ProfilerSourceMessage>(nullptr);
  }

  ProfilerSourceMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProfilerSourceMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProfilerSourceMessage& from);
  void MergeFrom(const ProfilerSourceMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProfilerSourceMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProfilerSourceMessage";
  }
  protected:
  explicit ProfilerSourceMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ProfilerSourceMessage_TypeInfo TypeInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kSourceFieldNumber = 1,
  };
  // required .SourceData Source = 1;
  bool has_source() const;
  private:
  bool _internal_has_source() const;
  public:
  void clear_source();
  const ::SourceData& source() const;
  ::SourceData* release_source();
  ::SourceData* mutable_source();
  void set_allocated_source(::SourceData* source);
  private:
  const ::SourceData& _internal_source() const;
  ::SourceData* _internal_mutable_source();
  public:
  void unsafe_arena_set_allocated_source(
      ::SourceData* source);
  ::SourceData* unsafe_arena_release_source();

  // @@protoc_insertion_point(class_scope:ProfilerSourceMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::SourceData* source_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class ClearCachedProfilerSourceMessage_TypeInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ClearCachedProfilerSourceMessage.TypeInfo) */ {
 public:
  inline ClearCachedProfilerSourceMessage_TypeInfo() : ClearCachedProfilerSourceMessage_TypeInfo(nullptr) {}
  virtual ~ClearCachedProfilerSourceMessage_TypeInfo();

  ClearCachedProfilerSourceMessage_TypeInfo(const ClearCachedProfilerSourceMessage_TypeInfo& from);
  ClearCachedProfilerSourceMessage_TypeInfo(ClearCachedProfilerSourceMessage_TypeInfo&& from) noexcept
    : ClearCachedProfilerSourceMessage_TypeInfo() {
    *this = ::std::move(from);
  }

  inline ClearCachedProfilerSourceMessage_TypeInfo& operator=(const ClearCachedProfilerSourceMessage_TypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearCachedProfilerSourceMessage_TypeInfo& operator=(ClearCachedProfilerSourceMessage_TypeInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClearCachedProfilerSourceMessage_TypeInfo& default_instance();

  static inline const ClearCachedProfilerSourceMessage_TypeInfo* internal_default_instance() {
    return reinterpret_cast<const ClearCachedProfilerSourceMessage_TypeInfo*>(
               &_ClearCachedProfilerSourceMessage_TypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ClearCachedProfilerSourceMessage_TypeInfo& a, ClearCachedProfilerSourceMessage_TypeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ClearCachedProfilerSourceMessage_TypeInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearCachedProfilerSourceMessage_TypeInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClearCachedProfilerSourceMessage_TypeInfo* New() const final {
    return CreateMaybeMessage<ClearCachedProfilerSourceMessage_TypeInfo>(nullptr);
  }

  ClearCachedProfilerSourceMessage_TypeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClearCachedProfilerSourceMessage_TypeInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClearCachedProfilerSourceMessage_TypeInfo& from);
  void MergeFrom(const ClearCachedProfilerSourceMessage_TypeInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClearCachedProfilerSourceMessage_TypeInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ClearCachedProfilerSourceMessage.TypeInfo";
  }
  protected:
  explicit ClearCachedProfilerSourceMessage_TypeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryFieldNumber = 1,
    kMethodFieldNumber = 2,
  };
  // optional .ProfilerCategory Category = 1 [default = CategoryResults];
  bool has_category() const;
  private:
  bool _internal_has_category() const;
  public:
  void clear_category();
  ::ProfilerCategory category() const;
  void set_category(::ProfilerCategory value);
  private:
  ::ProfilerCategory _internal_category() const;
  void _internal_set_category(::ProfilerCategory value);
  public:

  // optional .ProfilerResultsMethod Method = 2 [default = MethodClearCachedProfilerSourceMessage];
  bool has_method() const;
  private:
  bool _internal_has_method() const;
  public:
  void clear_method();
  ::ProfilerResultsMethod method() const;
  void set_method(::ProfilerResultsMethod value);
  private:
  ::ProfilerResultsMethod _internal_method() const;
  void _internal_set_method(::ProfilerResultsMethod value);
  public:

  // @@protoc_insertion_point(class_scope:ClearCachedProfilerSourceMessage.TypeInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int category_;
  int method_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class ClearCachedProfilerSourceMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ClearCachedProfilerSourceMessage) */ {
 public:
  inline ClearCachedProfilerSourceMessage() : ClearCachedProfilerSourceMessage(nullptr) {}
  virtual ~ClearCachedProfilerSourceMessage();

  ClearCachedProfilerSourceMessage(const ClearCachedProfilerSourceMessage& from);
  ClearCachedProfilerSourceMessage(ClearCachedProfilerSourceMessage&& from) noexcept
    : ClearCachedProfilerSourceMessage() {
    *this = ::std::move(from);
  }

  inline ClearCachedProfilerSourceMessage& operator=(const ClearCachedProfilerSourceMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearCachedProfilerSourceMessage& operator=(ClearCachedProfilerSourceMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClearCachedProfilerSourceMessage& default_instance();

  static inline const ClearCachedProfilerSourceMessage* internal_default_instance() {
    return reinterpret_cast<const ClearCachedProfilerSourceMessage*>(
               &_ClearCachedProfilerSourceMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ClearCachedProfilerSourceMessage& a, ClearCachedProfilerSourceMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ClearCachedProfilerSourceMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearCachedProfilerSourceMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClearCachedProfilerSourceMessage* New() const final {
    return CreateMaybeMessage<ClearCachedProfilerSourceMessage>(nullptr);
  }

  ClearCachedProfilerSourceMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClearCachedProfilerSourceMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClearCachedProfilerSourceMessage& from);
  void MergeFrom(const ClearCachedProfilerSourceMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClearCachedProfilerSourceMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ClearCachedProfilerSourceMessage";
  }
  protected:
  explicit ClearCachedProfilerSourceMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ClearCachedProfilerSourceMessage_TypeInfo TypeInfo;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ClearCachedProfilerSourceMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class ProfilerVersionInfoMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProfilerVersionInfoMessage) */ {
 public:
  inline ProfilerVersionInfoMessage() : ProfilerVersionInfoMessage(nullptr) {}
  virtual ~ProfilerVersionInfoMessage();

  ProfilerVersionInfoMessage(const ProfilerVersionInfoMessage& from);
  ProfilerVersionInfoMessage(ProfilerVersionInfoMessage&& from) noexcept
    : ProfilerVersionInfoMessage() {
    *this = ::std::move(from);
  }

  inline ProfilerVersionInfoMessage& operator=(const ProfilerVersionInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfilerVersionInfoMessage& operator=(ProfilerVersionInfoMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProfilerVersionInfoMessage& default_instance();

  static inline const ProfilerVersionInfoMessage* internal_default_instance() {
    return reinterpret_cast<const ProfilerVersionInfoMessage*>(
               &_ProfilerVersionInfoMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ProfilerVersionInfoMessage& a, ProfilerVersionInfoMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ProfilerVersionInfoMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfilerVersionInfoMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProfilerVersionInfoMessage* New() const final {
    return CreateMaybeMessage<ProfilerVersionInfoMessage>(nullptr);
  }

  ProfilerVersionInfoMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProfilerVersionInfoMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProfilerVersionInfoMessage& from);
  void MergeFrom(const ProfilerVersionInfoMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProfilerVersionInfoMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProfilerVersionInfoMessage";
  }
  protected:
  explicit ProfilerVersionInfoMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProviderFieldNumber = 1,
    kVersionFieldNumber = 2,
  };
  // required string Provider = 1;
  bool has_provider() const;
  private:
  bool _internal_has_provider() const;
  public:
  void clear_provider();
  const std::string& provider() const;
  void set_provider(const std::string& value);
  void set_provider(std::string&& value);
  void set_provider(const char* value);
  void set_provider(const char* value, size_t size);
  std::string* mutable_provider();
  std::string* release_provider();
  void set_allocated_provider(std::string* provider);
  private:
  const std::string& _internal_provider() const;
  void _internal_set_provider(const std::string& value);
  std::string* _internal_mutable_provider();
  public:

  // required string Version = 2;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  const std::string& version() const;
  void set_version(const std::string& value);
  void set_version(std::string&& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  std::string* mutable_version();
  std::string* release_version();
  void set_allocated_version(std::string* version);
  private:
  const std::string& _internal_version() const;
  void _internal_set_version(const std::string& value);
  std::string* _internal_mutable_version();
  public:

  // @@protoc_insertion_point(class_scope:ProfilerVersionInfoMessage)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr provider_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class ProfilerResultMessage_TypeInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProfilerResultMessage.TypeInfo) */ {
 public:
  inline ProfilerResultMessage_TypeInfo() : ProfilerResultMessage_TypeInfo(nullptr) {}
  virtual ~ProfilerResultMessage_TypeInfo();

  ProfilerResultMessage_TypeInfo(const ProfilerResultMessage_TypeInfo& from);
  ProfilerResultMessage_TypeInfo(ProfilerResultMessage_TypeInfo&& from) noexcept
    : ProfilerResultMessage_TypeInfo() {
    *this = ::std::move(from);
  }

  inline ProfilerResultMessage_TypeInfo& operator=(const ProfilerResultMessage_TypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfilerResultMessage_TypeInfo& operator=(ProfilerResultMessage_TypeInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProfilerResultMessage_TypeInfo& default_instance();

  static inline const ProfilerResultMessage_TypeInfo* internal_default_instance() {
    return reinterpret_cast<const ProfilerResultMessage_TypeInfo*>(
               &_ProfilerResultMessage_TypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ProfilerResultMessage_TypeInfo& a, ProfilerResultMessage_TypeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ProfilerResultMessage_TypeInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfilerResultMessage_TypeInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProfilerResultMessage_TypeInfo* New() const final {
    return CreateMaybeMessage<ProfilerResultMessage_TypeInfo>(nullptr);
  }

  ProfilerResultMessage_TypeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProfilerResultMessage_TypeInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProfilerResultMessage_TypeInfo& from);
  void MergeFrom(const ProfilerResultMessage_TypeInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProfilerResultMessage_TypeInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProfilerResultMessage.TypeInfo";
  }
  protected:
  explicit ProfilerResultMessage_TypeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryFieldNumber = 1,
    kMethodFieldNumber = 2,
  };
  // optional .ProfilerCategory Category = 1 [default = CategoryResults];
  bool has_category() const;
  private:
  bool _internal_has_category() const;
  public:
  void clear_category();
  ::ProfilerCategory category() const;
  void set_category(::ProfilerCategory value);
  private:
  ::ProfilerCategory _internal_category() const;
  void _internal_set_category(::ProfilerCategory value);
  public:

  // optional .ProfilerResultsMethod Method = 2 [default = MethodResultMessage];
  bool has_method() const;
  private:
  bool _internal_has_method() const;
  public:
  void clear_method();
  ::ProfilerResultsMethod method() const;
  void set_method(::ProfilerResultsMethod value);
  private:
  ::ProfilerResultsMethod _internal_method() const;
  void _internal_set_method(::ProfilerResultsMethod value);
  public:

  // @@protoc_insertion_point(class_scope:ProfilerResultMessage.TypeInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int category_;
  int method_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// -------------------------------------------------------------------

class ProfilerResultMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProfilerResultMessage) */ {
 public:
  inline ProfilerResultMessage() : ProfilerResultMessage(nullptr) {}
  virtual ~ProfilerResultMessage();

  ProfilerResultMessage(const ProfilerResultMessage& from);
  ProfilerResultMessage(ProfilerResultMessage&& from) noexcept
    : ProfilerResultMessage() {
    *this = ::std::move(from);
  }

  inline ProfilerResultMessage& operator=(const ProfilerResultMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfilerResultMessage& operator=(ProfilerResultMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProfilerResultMessage& default_instance();

  static inline const ProfilerResultMessage* internal_default_instance() {
    return reinterpret_cast<const ProfilerResultMessage*>(
               &_ProfilerResultMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ProfilerResultMessage& a, ProfilerResultMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ProfilerResultMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfilerResultMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProfilerResultMessage* New() const final {
    return CreateMaybeMessage<ProfilerResultMessage>(nullptr);
  }

  ProfilerResultMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProfilerResultMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProfilerResultMessage& from);
  void MergeFrom(const ProfilerResultMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProfilerResultMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProfilerResultMessage";
  }
  protected:
  explicit ProfilerResultMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProfilerResults_2eproto);
    return ::descriptor_table_ProfilerResults_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ProfilerResultMessage_TypeInfo TypeInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kMetricResultsFieldNumber = 3,
    kVersionInfoFieldNumber = 7,
    kLaunchFieldNumber = 2,
    kSourceFieldNumber = 4,
    kStringTableFieldNumber = 5,
    kSeriesInfoFieldNumber = 8,
    kIDFieldNumber = 1,
    kUnsupportedDeviceFieldNumber = 6,
  };
  // repeated .MetricResultMessage MetricResults = 3;
  int metricresults_size() const;
  private:
  int _internal_metricresults_size() const;
  public:
  void clear_metricresults();
  ::MetricResultMessage* mutable_metricresults(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricResultMessage >*
      mutable_metricresults();
  private:
  const ::MetricResultMessage& _internal_metricresults(int index) const;
  ::MetricResultMessage* _internal_add_metricresults();
  public:
  const ::MetricResultMessage& metricresults(int index) const;
  ::MetricResultMessage* add_metricresults();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricResultMessage >&
      metricresults() const;

  // repeated .ProfilerVersionInfoMessage VersionInfo = 7;
  int versioninfo_size() const;
  private:
  int _internal_versioninfo_size() const;
  public:
  void clear_versioninfo();
  ::ProfilerVersionInfoMessage* mutable_versioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProfilerVersionInfoMessage >*
      mutable_versioninfo();
  private:
  const ::ProfilerVersionInfoMessage& _internal_versioninfo(int index) const;
  ::ProfilerVersionInfoMessage* _internal_add_versioninfo();
  public:
  const ::ProfilerVersionInfoMessage& versioninfo(int index) const;
  ::ProfilerVersionInfoMessage* add_versioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProfilerVersionInfoMessage >&
      versioninfo() const;

  // required .LaunchData Launch = 2;
  bool has_launch() const;
  private:
  bool _internal_has_launch() const;
  public:
  void clear_launch();
  const ::LaunchData& launch() const;
  ::LaunchData* release_launch();
  ::LaunchData* mutable_launch();
  void set_allocated_launch(::LaunchData* launch);
  private:
  const ::LaunchData& _internal_launch() const;
  ::LaunchData* _internal_mutable_launch();
  public:
  void unsafe_arena_set_allocated_launch(
      ::LaunchData* launch);
  ::LaunchData* unsafe_arena_release_launch();

  // required .SourceData Source = 4;
  bool has_source() const;
  private:
  bool _internal_has_source() const;
  public:
  void clear_source();
  const ::SourceData& source() const;
  ::SourceData* release_source();
  ::SourceData* mutable_source();
  void set_allocated_source(::SourceData* source);
  private:
  const ::SourceData& _internal_source() const;
  ::SourceData* _internal_mutable_source();
  public:
  void unsafe_arena_set_allocated_source(
      ::SourceData* source);
  ::SourceData* unsafe_arena_release_source();

  // required .ProfilerStringTable StringTable = 5;
  bool has_stringtable() const;
  private:
  bool _internal_has_stringtable() const;
  public:
  void clear_stringtable();
  const ::ProfilerStringTable& stringtable() const;
  ::ProfilerStringTable* release_stringtable();
  ::ProfilerStringTable* mutable_stringtable();
  void set_allocated_stringtable(::ProfilerStringTable* stringtable);
  private:
  const ::ProfilerStringTable& _internal_stringtable() const;
  ::ProfilerStringTable* _internal_mutable_stringtable();
  public:
  void unsafe_arena_set_allocated_stringtable(
      ::ProfilerStringTable* stringtable);
  ::ProfilerStringTable* unsafe_arena_release_stringtable();

  // optional .ProfileSeriesInfoMessage SeriesInfo = 8;
  bool has_seriesinfo() const;
  private:
  bool _internal_has_seriesinfo() const;
  public:
  void clear_seriesinfo();
  const ::ProfileSeriesInfoMessage& seriesinfo() const;
  ::ProfileSeriesInfoMessage* release_seriesinfo();
  ::ProfileSeriesInfoMessage* mutable_seriesinfo();
  void set_allocated_seriesinfo(::ProfileSeriesInfoMessage* seriesinfo);
  private:
  const ::ProfileSeriesInfoMessage& _internal_seriesinfo() const;
  ::ProfileSeriesInfoMessage* _internal_mutable_seriesinfo();
  public:
  void unsafe_arena_set_allocated_seriesinfo(
      ::ProfileSeriesInfoMessage* seriesinfo);
  ::ProfileSeriesInfoMessage* unsafe_arena_release_seriesinfo();

  // required uint32 ID = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool UnsupportedDevice = 6;
  bool has_unsupporteddevice() const;
  private:
  bool _internal_has_unsupporteddevice() const;
  public:
  void clear_unsupporteddevice();
  bool unsupporteddevice() const;
  void set_unsupporteddevice(bool value);
  private:
  bool _internal_unsupporteddevice() const;
  void _internal_set_unsupporteddevice(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProfilerResultMessage)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricResultMessage > metricresults_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProfilerVersionInfoMessage > versioninfo_;
  ::LaunchData* launch_;
  ::SourceData* source_;
  ::ProfilerStringTable* stringtable_;
  ::ProfileSeriesInfoMessage* seriesinfo_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  bool unsupporteddevice_;
  friend struct ::TableStruct_ProfilerResults_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MetricValueMessage

// optional string StringValue = 1;
inline bool MetricValueMessage::_internal_has_stringvalue() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MetricValueMessage::has_stringvalue() const {
  return _internal_has_stringvalue();
}
inline void MetricValueMessage::clear_stringvalue() {
  stringvalue_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MetricValueMessage::stringvalue() const {
  // @@protoc_insertion_point(field_get:MetricValueMessage.StringValue)
  return _internal_stringvalue();
}
inline void MetricValueMessage::set_stringvalue(const std::string& value) {
  _internal_set_stringvalue(value);
  // @@protoc_insertion_point(field_set:MetricValueMessage.StringValue)
}
inline std::string* MetricValueMessage::mutable_stringvalue() {
  // @@protoc_insertion_point(field_mutable:MetricValueMessage.StringValue)
  return _internal_mutable_stringvalue();
}
inline const std::string& MetricValueMessage::_internal_stringvalue() const {
  return stringvalue_.Get();
}
inline void MetricValueMessage::_internal_set_stringvalue(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  stringvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MetricValueMessage::set_stringvalue(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  stringvalue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MetricValueMessage.StringValue)
}
inline void MetricValueMessage::set_stringvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  stringvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MetricValueMessage.StringValue)
}
inline void MetricValueMessage::set_stringvalue(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  stringvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MetricValueMessage.StringValue)
}
inline std::string* MetricValueMessage::_internal_mutable_stringvalue() {
  _has_bits_[0] |= 0x00000001u;
  return stringvalue_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MetricValueMessage::release_stringvalue() {
  // @@protoc_insertion_point(field_release:MetricValueMessage.StringValue)
  if (!_internal_has_stringvalue()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return stringvalue_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MetricValueMessage::set_allocated_stringvalue(std::string* stringvalue) {
  if (stringvalue != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stringvalue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MetricValueMessage.StringValue)
}

// optional float FloatValue = 2;
inline bool MetricValueMessage::_internal_has_floatvalue() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MetricValueMessage::has_floatvalue() const {
  return _internal_has_floatvalue();
}
inline void MetricValueMessage::clear_floatvalue() {
  floatvalue_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float MetricValueMessage::_internal_floatvalue() const {
  return floatvalue_;
}
inline float MetricValueMessage::floatvalue() const {
  // @@protoc_insertion_point(field_get:MetricValueMessage.FloatValue)
  return _internal_floatvalue();
}
inline void MetricValueMessage::_internal_set_floatvalue(float value) {
  _has_bits_[0] |= 0x00000004u;
  floatvalue_ = value;
}
inline void MetricValueMessage::set_floatvalue(float value) {
  _internal_set_floatvalue(value);
  // @@protoc_insertion_point(field_set:MetricValueMessage.FloatValue)
}

// optional double DoubleValue = 3;
inline bool MetricValueMessage::_internal_has_doublevalue() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MetricValueMessage::has_doublevalue() const {
  return _internal_has_doublevalue();
}
inline void MetricValueMessage::clear_doublevalue() {
  doublevalue_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double MetricValueMessage::_internal_doublevalue() const {
  return doublevalue_;
}
inline double MetricValueMessage::doublevalue() const {
  // @@protoc_insertion_point(field_get:MetricValueMessage.DoubleValue)
  return _internal_doublevalue();
}
inline void MetricValueMessage::_internal_set_doublevalue(double value) {
  _has_bits_[0] |= 0x00000002u;
  doublevalue_ = value;
}
inline void MetricValueMessage::set_doublevalue(double value) {
  _internal_set_doublevalue(value);
  // @@protoc_insertion_point(field_set:MetricValueMessage.DoubleValue)
}

// optional uint32 Uint32Value = 4;
inline bool MetricValueMessage::_internal_has_uint32value() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MetricValueMessage::has_uint32value() const {
  return _internal_has_uint32value();
}
inline void MetricValueMessage::clear_uint32value() {
  uint32value_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MetricValueMessage::_internal_uint32value() const {
  return uint32value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MetricValueMessage::uint32value() const {
  // @@protoc_insertion_point(field_get:MetricValueMessage.Uint32Value)
  return _internal_uint32value();
}
inline void MetricValueMessage::_internal_set_uint32value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uint32value_ = value;
}
inline void MetricValueMessage::set_uint32value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uint32value(value);
  // @@protoc_insertion_point(field_set:MetricValueMessage.Uint32Value)
}

// optional uint64 Uint64Value = 5;
inline bool MetricValueMessage::_internal_has_uint64value() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MetricValueMessage::has_uint64value() const {
  return _internal_has_uint64value();
}
inline void MetricValueMessage::clear_uint64value() {
  uint64value_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MetricValueMessage::_internal_uint64value() const {
  return uint64value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MetricValueMessage::uint64value() const {
  // @@protoc_insertion_point(field_get:MetricValueMessage.Uint64Value)
  return _internal_uint64value();
}
inline void MetricValueMessage::_internal_set_uint64value(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  uint64value_ = value;
}
inline void MetricValueMessage::set_uint64value(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uint64value(value);
  // @@protoc_insertion_point(field_set:MetricValueMessage.Uint64Value)
}

// -------------------------------------------------------------------

// MetricListElementMessage

// optional .MetricValueMessage CorrelationId = 1;
inline bool MetricListElementMessage::_internal_has_correlationid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || correlationid_ != nullptr);
  return value;
}
inline bool MetricListElementMessage::has_correlationid() const {
  return _internal_has_correlationid();
}
inline void MetricListElementMessage::clear_correlationid() {
  if (correlationid_ != nullptr) correlationid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::MetricValueMessage& MetricListElementMessage::_internal_correlationid() const {
  const ::MetricValueMessage* p = correlationid_;
  return p != nullptr ? *p : reinterpret_cast<const ::MetricValueMessage&>(
      ::_MetricValueMessage_default_instance_);
}
inline const ::MetricValueMessage& MetricListElementMessage::correlationid() const {
  // @@protoc_insertion_point(field_get:MetricListElementMessage.CorrelationId)
  return _internal_correlationid();
}
inline void MetricListElementMessage::unsafe_arena_set_allocated_correlationid(
    ::MetricValueMessage* correlationid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(correlationid_);
  }
  correlationid_ = correlationid;
  if (correlationid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MetricListElementMessage.CorrelationId)
}
inline ::MetricValueMessage* MetricListElementMessage::release_correlationid() {
  _has_bits_[0] &= ~0x00000001u;
  ::MetricValueMessage* temp = correlationid_;
  correlationid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MetricValueMessage* MetricListElementMessage::unsafe_arena_release_correlationid() {
  // @@protoc_insertion_point(field_release:MetricListElementMessage.CorrelationId)
  _has_bits_[0] &= ~0x00000001u;
  ::MetricValueMessage* temp = correlationid_;
  correlationid_ = nullptr;
  return temp;
}
inline ::MetricValueMessage* MetricListElementMessage::_internal_mutable_correlationid() {
  _has_bits_[0] |= 0x00000001u;
  if (correlationid_ == nullptr) {
    auto* p = CreateMaybeMessage<::MetricValueMessage>(GetArena());
    correlationid_ = p;
  }
  return correlationid_;
}
inline ::MetricValueMessage* MetricListElementMessage::mutable_correlationid() {
  // @@protoc_insertion_point(field_mutable:MetricListElementMessage.CorrelationId)
  return _internal_mutable_correlationid();
}
inline void MetricListElementMessage::set_allocated_correlationid(::MetricValueMessage* correlationid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete correlationid_;
  }
  if (correlationid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(correlationid);
    if (message_arena != submessage_arena) {
      correlationid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, correlationid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  correlationid_ = correlationid;
  // @@protoc_insertion_point(field_set_allocated:MetricListElementMessage.CorrelationId)
}

// required .MetricValueMessage ElementValue = 2;
inline bool MetricListElementMessage::_internal_has_elementvalue() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || elementvalue_ != nullptr);
  return value;
}
inline bool MetricListElementMessage::has_elementvalue() const {
  return _internal_has_elementvalue();
}
inline void MetricListElementMessage::clear_elementvalue() {
  if (elementvalue_ != nullptr) elementvalue_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::MetricValueMessage& MetricListElementMessage::_internal_elementvalue() const {
  const ::MetricValueMessage* p = elementvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::MetricValueMessage&>(
      ::_MetricValueMessage_default_instance_);
}
inline const ::MetricValueMessage& MetricListElementMessage::elementvalue() const {
  // @@protoc_insertion_point(field_get:MetricListElementMessage.ElementValue)
  return _internal_elementvalue();
}
inline void MetricListElementMessage::unsafe_arena_set_allocated_elementvalue(
    ::MetricValueMessage* elementvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(elementvalue_);
  }
  elementvalue_ = elementvalue;
  if (elementvalue) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MetricListElementMessage.ElementValue)
}
inline ::MetricValueMessage* MetricListElementMessage::release_elementvalue() {
  _has_bits_[0] &= ~0x00000002u;
  ::MetricValueMessage* temp = elementvalue_;
  elementvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MetricValueMessage* MetricListElementMessage::unsafe_arena_release_elementvalue() {
  // @@protoc_insertion_point(field_release:MetricListElementMessage.ElementValue)
  _has_bits_[0] &= ~0x00000002u;
  ::MetricValueMessage* temp = elementvalue_;
  elementvalue_ = nullptr;
  return temp;
}
inline ::MetricValueMessage* MetricListElementMessage::_internal_mutable_elementvalue() {
  _has_bits_[0] |= 0x00000002u;
  if (elementvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::MetricValueMessage>(GetArena());
    elementvalue_ = p;
  }
  return elementvalue_;
}
inline ::MetricValueMessage* MetricListElementMessage::mutable_elementvalue() {
  // @@protoc_insertion_point(field_mutable:MetricListElementMessage.ElementValue)
  return _internal_mutable_elementvalue();
}
inline void MetricListElementMessage::set_allocated_elementvalue(::MetricValueMessage* elementvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete elementvalue_;
  }
  if (elementvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(elementvalue);
    if (message_arena != submessage_arena) {
      elementvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, elementvalue, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  elementvalue_ = elementvalue;
  // @@protoc_insertion_point(field_set_allocated:MetricListElementMessage.ElementValue)
}

// -------------------------------------------------------------------

// MetricResultMessage

// required uint32 MetricNameId = 1;
inline bool MetricResultMessage::_internal_has_metricnameid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MetricResultMessage::has_metricnameid() const {
  return _internal_has_metricnameid();
}
inline void MetricResultMessage::clear_metricnameid() {
  metricnameid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MetricResultMessage::_internal_metricnameid() const {
  return metricnameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MetricResultMessage::metricnameid() const {
  // @@protoc_insertion_point(field_get:MetricResultMessage.MetricNameId)
  return _internal_metricnameid();
}
inline void MetricResultMessage::_internal_set_metricnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  metricnameid_ = value;
}
inline void MetricResultMessage::set_metricnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_metricnameid(value);
  // @@protoc_insertion_point(field_set:MetricResultMessage.MetricNameId)
}

// optional .MetricValueMessage MetricValue = 2;
inline bool MetricResultMessage::_internal_has_metricvalue() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || metricvalue_ != nullptr);
  return value;
}
inline bool MetricResultMessage::has_metricvalue() const {
  return _internal_has_metricvalue();
}
inline void MetricResultMessage::clear_metricvalue() {
  if (metricvalue_ != nullptr) metricvalue_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::MetricValueMessage& MetricResultMessage::_internal_metricvalue() const {
  const ::MetricValueMessage* p = metricvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::MetricValueMessage&>(
      ::_MetricValueMessage_default_instance_);
}
inline const ::MetricValueMessage& MetricResultMessage::metricvalue() const {
  // @@protoc_insertion_point(field_get:MetricResultMessage.MetricValue)
  return _internal_metricvalue();
}
inline void MetricResultMessage::unsafe_arena_set_allocated_metricvalue(
    ::MetricValueMessage* metricvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metricvalue_);
  }
  metricvalue_ = metricvalue;
  if (metricvalue) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MetricResultMessage.MetricValue)
}
inline ::MetricValueMessage* MetricResultMessage::release_metricvalue() {
  _has_bits_[0] &= ~0x00000001u;
  ::MetricValueMessage* temp = metricvalue_;
  metricvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MetricValueMessage* MetricResultMessage::unsafe_arena_release_metricvalue() {
  // @@protoc_insertion_point(field_release:MetricResultMessage.MetricValue)
  _has_bits_[0] &= ~0x00000001u;
  ::MetricValueMessage* temp = metricvalue_;
  metricvalue_ = nullptr;
  return temp;
}
inline ::MetricValueMessage* MetricResultMessage::_internal_mutable_metricvalue() {
  _has_bits_[0] |= 0x00000001u;
  if (metricvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::MetricValueMessage>(GetArena());
    metricvalue_ = p;
  }
  return metricvalue_;
}
inline ::MetricValueMessage* MetricResultMessage::mutable_metricvalue() {
  // @@protoc_insertion_point(field_mutable:MetricResultMessage.MetricValue)
  return _internal_mutable_metricvalue();
}
inline void MetricResultMessage::set_allocated_metricvalue(::MetricValueMessage* metricvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete metricvalue_;
  }
  if (metricvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(metricvalue);
    if (message_arena != submessage_arena) {
      metricvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metricvalue, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  metricvalue_ = metricvalue;
  // @@protoc_insertion_point(field_set_allocated:MetricResultMessage.MetricValue)
}

// repeated .MetricListElementMessage MetricValueList = 3;
inline int MetricResultMessage::_internal_metricvaluelist_size() const {
  return metricvaluelist_.size();
}
inline int MetricResultMessage::metricvaluelist_size() const {
  return _internal_metricvaluelist_size();
}
inline void MetricResultMessage::clear_metricvaluelist() {
  metricvaluelist_.Clear();
}
inline ::MetricListElementMessage* MetricResultMessage::mutable_metricvaluelist(int index) {
  // @@protoc_insertion_point(field_mutable:MetricResultMessage.MetricValueList)
  return metricvaluelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricListElementMessage >*
MetricResultMessage::mutable_metricvaluelist() {
  // @@protoc_insertion_point(field_mutable_list:MetricResultMessage.MetricValueList)
  return &metricvaluelist_;
}
inline const ::MetricListElementMessage& MetricResultMessage::_internal_metricvaluelist(int index) const {
  return metricvaluelist_.Get(index);
}
inline const ::MetricListElementMessage& MetricResultMessage::metricvaluelist(int index) const {
  // @@protoc_insertion_point(field_get:MetricResultMessage.MetricValueList)
  return _internal_metricvaluelist(index);
}
inline ::MetricListElementMessage* MetricResultMessage::_internal_add_metricvaluelist() {
  return metricvaluelist_.Add();
}
inline ::MetricListElementMessage* MetricResultMessage::add_metricvaluelist() {
  // @@protoc_insertion_point(field_add:MetricResultMessage.MetricValueList)
  return _internal_add_metricvaluelist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricListElementMessage >&
MetricResultMessage::metricvaluelist() const {
  // @@protoc_insertion_point(field_list:MetricResultMessage.MetricValueList)
  return metricvaluelist_;
}

// -------------------------------------------------------------------

// ProfilerSourceMessage_TypeInfo

// optional .ProfilerCategory Category = 1 [default = CategoryResults];
inline bool ProfilerSourceMessage_TypeInfo::_internal_has_category() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProfilerSourceMessage_TypeInfo::has_category() const {
  return _internal_has_category();
}
inline void ProfilerSourceMessage_TypeInfo::clear_category() {
  category_ = 3;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::ProfilerCategory ProfilerSourceMessage_TypeInfo::_internal_category() const {
  return static_cast< ::ProfilerCategory >(category_);
}
inline ::ProfilerCategory ProfilerSourceMessage_TypeInfo::category() const {
  // @@protoc_insertion_point(field_get:ProfilerSourceMessage.TypeInfo.Category)
  return _internal_category();
}
inline void ProfilerSourceMessage_TypeInfo::_internal_set_category(::ProfilerCategory value) {
  assert(::ProfilerCategory_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  category_ = value;
}
inline void ProfilerSourceMessage_TypeInfo::set_category(::ProfilerCategory value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:ProfilerSourceMessage.TypeInfo.Category)
}

// optional .ProfilerResultsMethod Method = 2 [default = MethodSourceMessage];
inline bool ProfilerSourceMessage_TypeInfo::_internal_has_method() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProfilerSourceMessage_TypeInfo::has_method() const {
  return _internal_has_method();
}
inline void ProfilerSourceMessage_TypeInfo::clear_method() {
  method_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ProfilerResultsMethod ProfilerSourceMessage_TypeInfo::_internal_method() const {
  return static_cast< ::ProfilerResultsMethod >(method_);
}
inline ::ProfilerResultsMethod ProfilerSourceMessage_TypeInfo::method() const {
  // @@protoc_insertion_point(field_get:ProfilerSourceMessage.TypeInfo.Method)
  return _internal_method();
}
inline void ProfilerSourceMessage_TypeInfo::_internal_set_method(::ProfilerResultsMethod value) {
  assert(::ProfilerResultsMethod_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  method_ = value;
}
inline void ProfilerSourceMessage_TypeInfo::set_method(::ProfilerResultsMethod value) {
  _internal_set_method(value);
  // @@protoc_insertion_point(field_set:ProfilerSourceMessage.TypeInfo.Method)
}

// -------------------------------------------------------------------

// ProfilerSourceMessage

// required .SourceData Source = 1;
inline bool ProfilerSourceMessage::_internal_has_source() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || source_ != nullptr);
  return value;
}
inline bool ProfilerSourceMessage::has_source() const {
  return _internal_has_source();
}
inline const ::SourceData& ProfilerSourceMessage::_internal_source() const {
  const ::SourceData* p = source_;
  return p != nullptr ? *p : reinterpret_cast<const ::SourceData&>(
      ::_SourceData_default_instance_);
}
inline const ::SourceData& ProfilerSourceMessage::source() const {
  // @@protoc_insertion_point(field_get:ProfilerSourceMessage.Source)
  return _internal_source();
}
inline void ProfilerSourceMessage::unsafe_arena_set_allocated_source(
    ::SourceData* source) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_);
  }
  source_ = source;
  if (source) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProfilerSourceMessage.Source)
}
inline ::SourceData* ProfilerSourceMessage::release_source() {
  _has_bits_[0] &= ~0x00000001u;
  ::SourceData* temp = source_;
  source_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SourceData* ProfilerSourceMessage::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_release:ProfilerSourceMessage.Source)
  _has_bits_[0] &= ~0x00000001u;
  ::SourceData* temp = source_;
  source_ = nullptr;
  return temp;
}
inline ::SourceData* ProfilerSourceMessage::_internal_mutable_source() {
  _has_bits_[0] |= 0x00000001u;
  if (source_ == nullptr) {
    auto* p = CreateMaybeMessage<::SourceData>(GetArena());
    source_ = p;
  }
  return source_;
}
inline ::SourceData* ProfilerSourceMessage::mutable_source() {
  // @@protoc_insertion_point(field_mutable:ProfilerSourceMessage.Source)
  return _internal_mutable_source();
}
inline void ProfilerSourceMessage::set_allocated_source(::SourceData* source) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_);
  }
  if (source) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source)->GetArena();
    if (message_arena != submessage_arena) {
      source = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:ProfilerSourceMessage.Source)
}

// -------------------------------------------------------------------

// ClearCachedProfilerSourceMessage_TypeInfo

// optional .ProfilerCategory Category = 1 [default = CategoryResults];
inline bool ClearCachedProfilerSourceMessage_TypeInfo::_internal_has_category() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ClearCachedProfilerSourceMessage_TypeInfo::has_category() const {
  return _internal_has_category();
}
inline void ClearCachedProfilerSourceMessage_TypeInfo::clear_category() {
  category_ = 3;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::ProfilerCategory ClearCachedProfilerSourceMessage_TypeInfo::_internal_category() const {
  return static_cast< ::ProfilerCategory >(category_);
}
inline ::ProfilerCategory ClearCachedProfilerSourceMessage_TypeInfo::category() const {
  // @@protoc_insertion_point(field_get:ClearCachedProfilerSourceMessage.TypeInfo.Category)
  return _internal_category();
}
inline void ClearCachedProfilerSourceMessage_TypeInfo::_internal_set_category(::ProfilerCategory value) {
  assert(::ProfilerCategory_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  category_ = value;
}
inline void ClearCachedProfilerSourceMessage_TypeInfo::set_category(::ProfilerCategory value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:ClearCachedProfilerSourceMessage.TypeInfo.Category)
}

// optional .ProfilerResultsMethod Method = 2 [default = MethodClearCachedProfilerSourceMessage];
inline bool ClearCachedProfilerSourceMessage_TypeInfo::_internal_has_method() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ClearCachedProfilerSourceMessage_TypeInfo::has_method() const {
  return _internal_has_method();
}
inline void ClearCachedProfilerSourceMessage_TypeInfo::clear_method() {
  method_ = 3;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ProfilerResultsMethod ClearCachedProfilerSourceMessage_TypeInfo::_internal_method() const {
  return static_cast< ::ProfilerResultsMethod >(method_);
}
inline ::ProfilerResultsMethod ClearCachedProfilerSourceMessage_TypeInfo::method() const {
  // @@protoc_insertion_point(field_get:ClearCachedProfilerSourceMessage.TypeInfo.Method)
  return _internal_method();
}
inline void ClearCachedProfilerSourceMessage_TypeInfo::_internal_set_method(::ProfilerResultsMethod value) {
  assert(::ProfilerResultsMethod_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  method_ = value;
}
inline void ClearCachedProfilerSourceMessage_TypeInfo::set_method(::ProfilerResultsMethod value) {
  _internal_set_method(value);
  // @@protoc_insertion_point(field_set:ClearCachedProfilerSourceMessage.TypeInfo.Method)
}

// -------------------------------------------------------------------

// ClearCachedProfilerSourceMessage

// -------------------------------------------------------------------

// ProfilerVersionInfoMessage

// required string Provider = 1;
inline bool ProfilerVersionInfoMessage::_internal_has_provider() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProfilerVersionInfoMessage::has_provider() const {
  return _internal_has_provider();
}
inline void ProfilerVersionInfoMessage::clear_provider() {
  provider_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProfilerVersionInfoMessage::provider() const {
  // @@protoc_insertion_point(field_get:ProfilerVersionInfoMessage.Provider)
  return _internal_provider();
}
inline void ProfilerVersionInfoMessage::set_provider(const std::string& value) {
  _internal_set_provider(value);
  // @@protoc_insertion_point(field_set:ProfilerVersionInfoMessage.Provider)
}
inline std::string* ProfilerVersionInfoMessage::mutable_provider() {
  // @@protoc_insertion_point(field_mutable:ProfilerVersionInfoMessage.Provider)
  return _internal_mutable_provider();
}
inline const std::string& ProfilerVersionInfoMessage::_internal_provider() const {
  return provider_.Get();
}
inline void ProfilerVersionInfoMessage::_internal_set_provider(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProfilerVersionInfoMessage::set_provider(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  provider_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProfilerVersionInfoMessage.Provider)
}
inline void ProfilerVersionInfoMessage::set_provider(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProfilerVersionInfoMessage.Provider)
}
inline void ProfilerVersionInfoMessage::set_provider(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProfilerVersionInfoMessage.Provider)
}
inline std::string* ProfilerVersionInfoMessage::_internal_mutable_provider() {
  _has_bits_[0] |= 0x00000001u;
  return provider_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProfilerVersionInfoMessage::release_provider() {
  // @@protoc_insertion_point(field_release:ProfilerVersionInfoMessage.Provider)
  if (!_internal_has_provider()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return provider_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProfilerVersionInfoMessage::set_allocated_provider(std::string* provider) {
  if (provider != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  provider_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), provider,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProfilerVersionInfoMessage.Provider)
}

// required string Version = 2;
inline bool ProfilerVersionInfoMessage::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProfilerVersionInfoMessage::has_version() const {
  return _internal_has_version();
}
inline void ProfilerVersionInfoMessage::clear_version() {
  version_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProfilerVersionInfoMessage::version() const {
  // @@protoc_insertion_point(field_get:ProfilerVersionInfoMessage.Version)
  return _internal_version();
}
inline void ProfilerVersionInfoMessage::set_version(const std::string& value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:ProfilerVersionInfoMessage.Version)
}
inline std::string* ProfilerVersionInfoMessage::mutable_version() {
  // @@protoc_insertion_point(field_mutable:ProfilerVersionInfoMessage.Version)
  return _internal_mutable_version();
}
inline const std::string& ProfilerVersionInfoMessage::_internal_version() const {
  return version_.Get();
}
inline void ProfilerVersionInfoMessage::_internal_set_version(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProfilerVersionInfoMessage::set_version(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  version_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProfilerVersionInfoMessage.Version)
}
inline void ProfilerVersionInfoMessage::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProfilerVersionInfoMessage.Version)
}
inline void ProfilerVersionInfoMessage::set_version(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProfilerVersionInfoMessage.Version)
}
inline std::string* ProfilerVersionInfoMessage::_internal_mutable_version() {
  _has_bits_[0] |= 0x00000002u;
  return version_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProfilerVersionInfoMessage::release_version() {
  // @@protoc_insertion_point(field_release:ProfilerVersionInfoMessage.Version)
  if (!_internal_has_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return version_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProfilerVersionInfoMessage::set_allocated_version(std::string* version) {
  if (version != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  version_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProfilerVersionInfoMessage.Version)
}

// -------------------------------------------------------------------

// ProfilerResultMessage_TypeInfo

// optional .ProfilerCategory Category = 1 [default = CategoryResults];
inline bool ProfilerResultMessage_TypeInfo::_internal_has_category() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProfilerResultMessage_TypeInfo::has_category() const {
  return _internal_has_category();
}
inline void ProfilerResultMessage_TypeInfo::clear_category() {
  category_ = 3;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::ProfilerCategory ProfilerResultMessage_TypeInfo::_internal_category() const {
  return static_cast< ::ProfilerCategory >(category_);
}
inline ::ProfilerCategory ProfilerResultMessage_TypeInfo::category() const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.TypeInfo.Category)
  return _internal_category();
}
inline void ProfilerResultMessage_TypeInfo::_internal_set_category(::ProfilerCategory value) {
  assert(::ProfilerCategory_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  category_ = value;
}
inline void ProfilerResultMessage_TypeInfo::set_category(::ProfilerCategory value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:ProfilerResultMessage.TypeInfo.Category)
}

// optional .ProfilerResultsMethod Method = 2 [default = MethodResultMessage];
inline bool ProfilerResultMessage_TypeInfo::_internal_has_method() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProfilerResultMessage_TypeInfo::has_method() const {
  return _internal_has_method();
}
inline void ProfilerResultMessage_TypeInfo::clear_method() {
  method_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ProfilerResultsMethod ProfilerResultMessage_TypeInfo::_internal_method() const {
  return static_cast< ::ProfilerResultsMethod >(method_);
}
inline ::ProfilerResultsMethod ProfilerResultMessage_TypeInfo::method() const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.TypeInfo.Method)
  return _internal_method();
}
inline void ProfilerResultMessage_TypeInfo::_internal_set_method(::ProfilerResultsMethod value) {
  assert(::ProfilerResultsMethod_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  method_ = value;
}
inline void ProfilerResultMessage_TypeInfo::set_method(::ProfilerResultsMethod value) {
  _internal_set_method(value);
  // @@protoc_insertion_point(field_set:ProfilerResultMessage.TypeInfo.Method)
}

// -------------------------------------------------------------------

// ProfilerResultMessage

// required uint32 ID = 1;
inline bool ProfilerResultMessage::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProfilerResultMessage::has_id() const {
  return _internal_has_id();
}
inline void ProfilerResultMessage::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProfilerResultMessage::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProfilerResultMessage::id() const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.ID)
  return _internal_id();
}
inline void ProfilerResultMessage::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  id_ = value;
}
inline void ProfilerResultMessage::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ProfilerResultMessage.ID)
}

// required .LaunchData Launch = 2;
inline bool ProfilerResultMessage::_internal_has_launch() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || launch_ != nullptr);
  return value;
}
inline bool ProfilerResultMessage::has_launch() const {
  return _internal_has_launch();
}
inline const ::LaunchData& ProfilerResultMessage::_internal_launch() const {
  const ::LaunchData* p = launch_;
  return p != nullptr ? *p : reinterpret_cast<const ::LaunchData&>(
      ::_LaunchData_default_instance_);
}
inline const ::LaunchData& ProfilerResultMessage::launch() const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.Launch)
  return _internal_launch();
}
inline void ProfilerResultMessage::unsafe_arena_set_allocated_launch(
    ::LaunchData* launch) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(launch_);
  }
  launch_ = launch;
  if (launch) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProfilerResultMessage.Launch)
}
inline ::LaunchData* ProfilerResultMessage::release_launch() {
  _has_bits_[0] &= ~0x00000001u;
  ::LaunchData* temp = launch_;
  launch_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::LaunchData* ProfilerResultMessage::unsafe_arena_release_launch() {
  // @@protoc_insertion_point(field_release:ProfilerResultMessage.Launch)
  _has_bits_[0] &= ~0x00000001u;
  ::LaunchData* temp = launch_;
  launch_ = nullptr;
  return temp;
}
inline ::LaunchData* ProfilerResultMessage::_internal_mutable_launch() {
  _has_bits_[0] |= 0x00000001u;
  if (launch_ == nullptr) {
    auto* p = CreateMaybeMessage<::LaunchData>(GetArena());
    launch_ = p;
  }
  return launch_;
}
inline ::LaunchData* ProfilerResultMessage::mutable_launch() {
  // @@protoc_insertion_point(field_mutable:ProfilerResultMessage.Launch)
  return _internal_mutable_launch();
}
inline void ProfilerResultMessage::set_allocated_launch(::LaunchData* launch) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(launch_);
  }
  if (launch) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(launch)->GetArena();
    if (message_arena != submessage_arena) {
      launch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, launch, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  launch_ = launch;
  // @@protoc_insertion_point(field_set_allocated:ProfilerResultMessage.Launch)
}

// repeated .MetricResultMessage MetricResults = 3;
inline int ProfilerResultMessage::_internal_metricresults_size() const {
  return metricresults_.size();
}
inline int ProfilerResultMessage::metricresults_size() const {
  return _internal_metricresults_size();
}
inline void ProfilerResultMessage::clear_metricresults() {
  metricresults_.Clear();
}
inline ::MetricResultMessage* ProfilerResultMessage::mutable_metricresults(int index) {
  // @@protoc_insertion_point(field_mutable:ProfilerResultMessage.MetricResults)
  return metricresults_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricResultMessage >*
ProfilerResultMessage::mutable_metricresults() {
  // @@protoc_insertion_point(field_mutable_list:ProfilerResultMessage.MetricResults)
  return &metricresults_;
}
inline const ::MetricResultMessage& ProfilerResultMessage::_internal_metricresults(int index) const {
  return metricresults_.Get(index);
}
inline const ::MetricResultMessage& ProfilerResultMessage::metricresults(int index) const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.MetricResults)
  return _internal_metricresults(index);
}
inline ::MetricResultMessage* ProfilerResultMessage::_internal_add_metricresults() {
  return metricresults_.Add();
}
inline ::MetricResultMessage* ProfilerResultMessage::add_metricresults() {
  // @@protoc_insertion_point(field_add:ProfilerResultMessage.MetricResults)
  return _internal_add_metricresults();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MetricResultMessage >&
ProfilerResultMessage::metricresults() const {
  // @@protoc_insertion_point(field_list:ProfilerResultMessage.MetricResults)
  return metricresults_;
}

// required .SourceData Source = 4;
inline bool ProfilerResultMessage::_internal_has_source() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || source_ != nullptr);
  return value;
}
inline bool ProfilerResultMessage::has_source() const {
  return _internal_has_source();
}
inline const ::SourceData& ProfilerResultMessage::_internal_source() const {
  const ::SourceData* p = source_;
  return p != nullptr ? *p : reinterpret_cast<const ::SourceData&>(
      ::_SourceData_default_instance_);
}
inline const ::SourceData& ProfilerResultMessage::source() const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.Source)
  return _internal_source();
}
inline void ProfilerResultMessage::unsafe_arena_set_allocated_source(
    ::SourceData* source) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_);
  }
  source_ = source;
  if (source) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProfilerResultMessage.Source)
}
inline ::SourceData* ProfilerResultMessage::release_source() {
  _has_bits_[0] &= ~0x00000002u;
  ::SourceData* temp = source_;
  source_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SourceData* ProfilerResultMessage::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_release:ProfilerResultMessage.Source)
  _has_bits_[0] &= ~0x00000002u;
  ::SourceData* temp = source_;
  source_ = nullptr;
  return temp;
}
inline ::SourceData* ProfilerResultMessage::_internal_mutable_source() {
  _has_bits_[0] |= 0x00000002u;
  if (source_ == nullptr) {
    auto* p = CreateMaybeMessage<::SourceData>(GetArena());
    source_ = p;
  }
  return source_;
}
inline ::SourceData* ProfilerResultMessage::mutable_source() {
  // @@protoc_insertion_point(field_mutable:ProfilerResultMessage.Source)
  return _internal_mutable_source();
}
inline void ProfilerResultMessage::set_allocated_source(::SourceData* source) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_);
  }
  if (source) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source)->GetArena();
    if (message_arena != submessage_arena) {
      source = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:ProfilerResultMessage.Source)
}

// required .ProfilerStringTable StringTable = 5;
inline bool ProfilerResultMessage::_internal_has_stringtable() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stringtable_ != nullptr);
  return value;
}
inline bool ProfilerResultMessage::has_stringtable() const {
  return _internal_has_stringtable();
}
inline const ::ProfilerStringTable& ProfilerResultMessage::_internal_stringtable() const {
  const ::ProfilerStringTable* p = stringtable_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProfilerStringTable&>(
      ::_ProfilerStringTable_default_instance_);
}
inline const ::ProfilerStringTable& ProfilerResultMessage::stringtable() const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.StringTable)
  return _internal_stringtable();
}
inline void ProfilerResultMessage::unsafe_arena_set_allocated_stringtable(
    ::ProfilerStringTable* stringtable) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stringtable_);
  }
  stringtable_ = stringtable;
  if (stringtable) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProfilerResultMessage.StringTable)
}
inline ::ProfilerStringTable* ProfilerResultMessage::release_stringtable() {
  _has_bits_[0] &= ~0x00000004u;
  ::ProfilerStringTable* temp = stringtable_;
  stringtable_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ProfilerStringTable* ProfilerResultMessage::unsafe_arena_release_stringtable() {
  // @@protoc_insertion_point(field_release:ProfilerResultMessage.StringTable)
  _has_bits_[0] &= ~0x00000004u;
  ::ProfilerStringTable* temp = stringtable_;
  stringtable_ = nullptr;
  return temp;
}
inline ::ProfilerStringTable* ProfilerResultMessage::_internal_mutable_stringtable() {
  _has_bits_[0] |= 0x00000004u;
  if (stringtable_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProfilerStringTable>(GetArena());
    stringtable_ = p;
  }
  return stringtable_;
}
inline ::ProfilerStringTable* ProfilerResultMessage::mutable_stringtable() {
  // @@protoc_insertion_point(field_mutable:ProfilerResultMessage.StringTable)
  return _internal_mutable_stringtable();
}
inline void ProfilerResultMessage::set_allocated_stringtable(::ProfilerStringTable* stringtable) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(stringtable_);
  }
  if (stringtable) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stringtable)->GetArena();
    if (message_arena != submessage_arena) {
      stringtable = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stringtable, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stringtable_ = stringtable;
  // @@protoc_insertion_point(field_set_allocated:ProfilerResultMessage.StringTable)
}

// optional bool UnsupportedDevice = 6;
inline bool ProfilerResultMessage::_internal_has_unsupporteddevice() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProfilerResultMessage::has_unsupporteddevice() const {
  return _internal_has_unsupporteddevice();
}
inline void ProfilerResultMessage::clear_unsupporteddevice() {
  unsupporteddevice_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool ProfilerResultMessage::_internal_unsupporteddevice() const {
  return unsupporteddevice_;
}
inline bool ProfilerResultMessage::unsupporteddevice() const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.UnsupportedDevice)
  return _internal_unsupporteddevice();
}
inline void ProfilerResultMessage::_internal_set_unsupporteddevice(bool value) {
  _has_bits_[0] |= 0x00000020u;
  unsupporteddevice_ = value;
}
inline void ProfilerResultMessage::set_unsupporteddevice(bool value) {
  _internal_set_unsupporteddevice(value);
  // @@protoc_insertion_point(field_set:ProfilerResultMessage.UnsupportedDevice)
}

// repeated .ProfilerVersionInfoMessage VersionInfo = 7;
inline int ProfilerResultMessage::_internal_versioninfo_size() const {
  return versioninfo_.size();
}
inline int ProfilerResultMessage::versioninfo_size() const {
  return _internal_versioninfo_size();
}
inline void ProfilerResultMessage::clear_versioninfo() {
  versioninfo_.Clear();
}
inline ::ProfilerVersionInfoMessage* ProfilerResultMessage::mutable_versioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:ProfilerResultMessage.VersionInfo)
  return versioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProfilerVersionInfoMessage >*
ProfilerResultMessage::mutable_versioninfo() {
  // @@protoc_insertion_point(field_mutable_list:ProfilerResultMessage.VersionInfo)
  return &versioninfo_;
}
inline const ::ProfilerVersionInfoMessage& ProfilerResultMessage::_internal_versioninfo(int index) const {
  return versioninfo_.Get(index);
}
inline const ::ProfilerVersionInfoMessage& ProfilerResultMessage::versioninfo(int index) const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.VersionInfo)
  return _internal_versioninfo(index);
}
inline ::ProfilerVersionInfoMessage* ProfilerResultMessage::_internal_add_versioninfo() {
  return versioninfo_.Add();
}
inline ::ProfilerVersionInfoMessage* ProfilerResultMessage::add_versioninfo() {
  // @@protoc_insertion_point(field_add:ProfilerResultMessage.VersionInfo)
  return _internal_add_versioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProfilerVersionInfoMessage >&
ProfilerResultMessage::versioninfo() const {
  // @@protoc_insertion_point(field_list:ProfilerResultMessage.VersionInfo)
  return versioninfo_;
}

// optional .ProfileSeriesInfoMessage SeriesInfo = 8;
inline bool ProfilerResultMessage::_internal_has_seriesinfo() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || seriesinfo_ != nullptr);
  return value;
}
inline bool ProfilerResultMessage::has_seriesinfo() const {
  return _internal_has_seriesinfo();
}
inline const ::ProfileSeriesInfoMessage& ProfilerResultMessage::_internal_seriesinfo() const {
  const ::ProfileSeriesInfoMessage* p = seriesinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProfileSeriesInfoMessage&>(
      ::_ProfileSeriesInfoMessage_default_instance_);
}
inline const ::ProfileSeriesInfoMessage& ProfilerResultMessage::seriesinfo() const {
  // @@protoc_insertion_point(field_get:ProfilerResultMessage.SeriesInfo)
  return _internal_seriesinfo();
}
inline void ProfilerResultMessage::unsafe_arena_set_allocated_seriesinfo(
    ::ProfileSeriesInfoMessage* seriesinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(seriesinfo_);
  }
  seriesinfo_ = seriesinfo;
  if (seriesinfo) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProfilerResultMessage.SeriesInfo)
}
inline ::ProfileSeriesInfoMessage* ProfilerResultMessage::release_seriesinfo() {
  _has_bits_[0] &= ~0x00000008u;
  ::ProfileSeriesInfoMessage* temp = seriesinfo_;
  seriesinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ProfileSeriesInfoMessage* ProfilerResultMessage::unsafe_arena_release_seriesinfo() {
  // @@protoc_insertion_point(field_release:ProfilerResultMessage.SeriesInfo)
  _has_bits_[0] &= ~0x00000008u;
  ::ProfileSeriesInfoMessage* temp = seriesinfo_;
  seriesinfo_ = nullptr;
  return temp;
}
inline ::ProfileSeriesInfoMessage* ProfilerResultMessage::_internal_mutable_seriesinfo() {
  _has_bits_[0] |= 0x00000008u;
  if (seriesinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProfileSeriesInfoMessage>(GetArena());
    seriesinfo_ = p;
  }
  return seriesinfo_;
}
inline ::ProfileSeriesInfoMessage* ProfilerResultMessage::mutable_seriesinfo() {
  // @@protoc_insertion_point(field_mutable:ProfilerResultMessage.SeriesInfo)
  return _internal_mutable_seriesinfo();
}
inline void ProfilerResultMessage::set_allocated_seriesinfo(::ProfileSeriesInfoMessage* seriesinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(seriesinfo_);
  }
  if (seriesinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(seriesinfo)->GetArena();
    if (message_arena != submessage_arena) {
      seriesinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, seriesinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  seriesinfo_ = seriesinfo;
  // @@protoc_insertion_point(field_set_allocated:ProfilerResultMessage.SeriesInfo)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ProfilerResultsMethod> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProfilerResultsMethod>() {
  return ::ProfilerResultsMethod_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProfilerResults_2eproto
